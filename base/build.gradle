apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion project.rootProject.ext.target_sdk

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    /*
     * UI
     */
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
    api "androidx.navigation:navigation-ui-ktx:$nav_version"
    api "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    api "androidx.core:core-ktx:1.3.2"
    api 'com.google.android:flexbox:2.0.1'
    api 'com.google.android.material:material:1.2.1'
    api "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    /*
     * HLS webcam streams
     */
    implementation 'com.google.android.exoplayer:exoplayer-core:2.12.2'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.12.2'

    /*
     * Firebase
     */
    api platform('com.google.firebase:firebase-bom:26.5.0')
    api 'com.google.firebase:firebase-auth-ktx'
    api 'com.google.firebase:firebase-analytics-ktx'
    api 'com.google.firebase:firebase-config-ktx'
    api 'com.google.firebase:firebase-crashlytics'
    api 'com.google.firebase:firebase-messaging'
    api 'com.google.firebase:firebase-inappmessaging-display-ktx'

    /*
     * Billing
     */
    implementation "com.android.billingclient:billing:$billing_version"
    implementation "com.android.billingclient:billing-ktx:$billing_version"

    /*
     * Test
     */
    testImplementation 'junit:junit:4.13'
    testImplementation 'com.google.truth:truth:1.0.1'
    androidTestImplementation 'com.google.truth:truth:1.0.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    /*
     * Markdown
     */
    final def markwon_version = '4.6.2'
    api "io.noties.markwon:core:$markwon_version"
    api "io.noties.markwon:image:$markwon_version"
    api "io.noties.markwon:linkify:$markwon_version"
    api 'pl.droidsonroids.gif:android-gif-drawable:1.2.22'

    /*
     * Dagger
     */
    api "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    /*
     * More transitions <3
     */
    api 'com.andkulikov:transitionseverywhere:2.1.0'

    /*
     * Logging
     */
    api 'com.jakewharton.timber:timber:4.7.1'

    /*
     * Octoprint
     */
    api project(':octoprint')

    /*
     * Serialization
     */
    implementation 'de.ruedigermoeller:fst:2.56'

    /*
     * Preferences
     */
    api "androidx.preference:preference-ktx:1.1.1"
    api 'com.google.code.gson:gson:2.8.6'
}