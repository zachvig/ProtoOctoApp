package de.crysxd.octoapp.base.gcode

import com.google.common.truth.Truth.assertThat
import org.junit.Test

class CuraGcodeInterpreterTest {

    private val target = CuraGcodeInterpreter()

    @Test
    fun `WHEN ask for interpretation THEN true is returned`() {
        // GIVEN

        // WHEN
        val result = target.canInterpretFile(gcode)

        // THEN
        assertThat(result).isTrue()
    }

    @Test
    fun `WHEN gcode is interpreted THEN the correct data structure is returned`() {
        // GIVEN

        // WHEN
        val result = target.interpretFile(gcode)

        // THEN
        assertThat(result.layers.size).isEqualTo(4)
        assertThat(result.layers[0].moves.size).isEqualTo(3)
        assertThat(result.layers[0].moves[0].from.x).isEqualTo(0f)
        assertThat(result.layers[0].moves[0].from.y).isEqualTo(0f)
        assertThat(result.layers[0].moves[0].to.x).isEqualTo(0f)
        assertThat(result.layers[0].moves[0].to.y).isEqualTo(0f)
        assertThat(result.layers[0].moves[1].from.x).isEqualTo(0f)
        assertThat(result.layers[0].moves[1].from.y).isEqualTo(0f)
        assertThat(result.layers[0].moves[1].to.x).isEqualTo(40.5f)
        assertThat(result.layers[0].moves[1].to.y).isEqualTo(0f)
        assertThat(result.layers[0].moves[2].from.x).isEqualTo(40.5f)
        assertThat(result.layers[0].moves[2].from.y).isEqualTo(0f)
        assertThat(result.layers[0].moves[2].to.x).isEqualTo(0f)
        assertThat(result.layers[0].moves[2].to.y).isEqualTo(0f)
        assertThat(result.layers[1].moves.size).isEqualTo(5)
        assertThat(result.layers[2].moves.size).isEqualTo(6)
        assertThat(result.layers[2].moves[0].from.y).isEqualTo(20f)
        assertThat(result.layers[2].moves[0].from.x).isEqualTo(20f)
        assertThat(result.layers[2].moves[0].to.x).isEqualTo(20.2f)
        assertThat(result.layers[2].moves[0].to.y).isEqualTo(20f)
        assertThat(result.layers[2].moves[2].from.y).isEqualTo(20f)
        assertThat(result.layers[2].moves[2].from.x).isEqualTo(20f)
        assertThat(result.layers[2].moves[2].to.x).isEqualTo(40f)
        assertThat(result.layers[2].moves[2].to.y).isEqualTo(20f)
        assertThat(result.layers[3].moves.size).isEqualTo(5)
    }

    private val gcode = """
        ;Generated with Cura_SteamEngine 4.7.1
        ; generated by PrusaSlicer 2.1.0+512-win64 on 2019-11-22 at 19:44:31 UTC

        ;LAYER_COUNT:4
        G0 X0 Y0
        G1 X40.5 Y0 E20
        G1 X0 Y0 E20
        ;LAYER:0
        ;AFTER_LAYER_CHANGE
        G0 X20 Y20
        G1 X40 Y20 E20
        G1 X40 Y40 E20
        G1 X20 Y40 E20
        G1 X20 Y20 E20
        ;LAYER:1
        ;AFTER_LAYER_CHANGE
        G91
        G0 X0.2 Z0.2
        G90
        G1 X20 Y20
        G1 X40 Y20 E20
        G1 X40 Y40 E20
        G1 X20 Y40 E20
        G1 X20 Y20 E20
        ;LAYER:2
        ;AFTER_LAYER_CHANGE
        G1 X20 Y20 Z0.4
        G1 X40 Y20 E20
        G1 X40 Y40 E20
        G1 X20 Y40 E20
        G1 X20 Y20 E20
        ;LAYER:3
        ;AFTER_LAYER_CHANGE
        G0 X20 Y20 Z0.6
        G1 X40 Y20 E20
        G1 X40 Y40 E20
        G1 X20 Y40 E20
        G1 X20 Y20 E20

    """.trimIndent()

}